empty dir:

apiVersion: v1
kind: Pod
metadata:
  name: test-redis
spec:
  containers:
  - image: redis
    name: test-container
    volumeMounts:
    - mountPath: /data/redis
      name: cache-volume
  volumes:
  - name: cache-volume
    emptyDir: {}
    
login to pod

go to /data/redis and create one file 

kill 1---to kill container

again login to pod and check file will be there
===============================================
configmap and secret:

cat test-dev.properties
db.url=https://mydev-db.com/testdb
cat test-prod.properties
db.url=https://myprod-db.com/testdb


kubectl create configmap myconfigmap --from-file=config/



apiVersion: v1
kind: Pod
metadata:
  name: secondpod
spec:
  containers:
  - name: pod1
    image: nginx
    ports:
      - containerPort: 80
    volumeMounts:
      - name: config-volume
        mountPath: /etc/config
  volumes:
     - name: config-volume
       configMap:
          name: myconfigmap


kubectl exec -it secondpod sh

cd /etc/config/

Secrets:


echo -n 'damo' > ./username.txt
echo -n 'damo123' > ./password.txt


kubectl create secret --help
Create a secret using specified subcommand.

Available Commands:
  docker-registry Create a secret for use with a Docker registry
  generic         Create a secret from a local file, directory or literal value
  tls             Create a TLS secret

Usage:
  kubectl create secret [flags] [options]

Use "kubectl <command> --help" for more information about a given command.
Use "kubectl options" for a list of global command-line options (applies to all commands).



kubectl create secret generic database-password --from-file=/root/username.txt  --from-file=/root/password.txt


[root@ip-172-31-34-245 ~]# echo -n 'damo' | base64
ZGFtbw==
[root@ip-172-31-34-245 ~]# echo -n 'damo123' | base64
ZGFtbzEyMw==


apiVersion: v1
kind: Secret
metadata:
  name: mysecret
type: Opaque
data:
   username: ZGFtbw==
   password: ZGFtbzEyMw==


apiVersion: v1
kind: Pod
metadata:
  name: secretpod
spec:
  containers:
  - name: pod1
    image: redis
    volumeMounts:
      - name: secret-volume
        mountPath: /etc/secret
  volumes:
     - name: secret-volume
       secret:
           secretName: mysecret

kubectl describe pod <>

Mounts:
      /etc/secret from secret-volume (rw)
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-bfnnr (ro)


kubectl exec -it <pod name >

/etc/secret


apiVersion: v1
kind: Pod
metadata:
  name: secretpod1
spec:
  containers:
  - name: mycontainer
    image: redis
    env:
      - name: SECRET_USERNAME
        valueFrom:
          secretKeyRef:
             name: mysecret
             key: username
      - name: SECRET_PASSWORD
        valueFrom:
          secretKeyRef:
             name: mysecret
             key: password
=============================================





